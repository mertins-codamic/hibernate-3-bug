package com.codamai.cms.models;

import java.time.LocalDateTime;
import java.util.Objects;
import java.util.UUID;

import org.hibernate.annotations.GenericGenerator;

import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.Column;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.MappedSuperclass;
import jakarta.persistence.Transient;
import lombok.Data;

/**
 * Basic database object, with different meta data like owner, creation time and update time.
 * 
 * @author Mertins-D
 */
@Data
@MappedSuperclass
public abstract class AbstractModel {
  /** set all default values to model. */
  public abstract void init();

  /** id, generated by JPA with uuid2-strategy. */
  @Id
  @Column(name = "id", insertable = false, updatable = false)
  @GeneratedValue(generator = "uuid")
  @GenericGenerator(name = "uuid", strategy = "uuid2")
  private String id;

  /** internal UUID to separate new created objects. */
  @JsonIgnore
  @Transient
  private String _identifier = UUID.randomUUID().toString();

  /** is processed for back reference check. */
  @JsonIgnore
  @Transient
  private boolean _processed = false;

  /** Object-creation time. */
  @Column(name = "_created_on", nullable = false)
  private LocalDateTime _createdOn;

  /** Last time, object was updated. */
  @Column(name = "_updated_on")
  private LocalDateTime _updatedOn;

  @Override
  public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (obj == null)
      return false;
    if (getClass() != obj.getClass())
      return false;
    AbstractModel other = (AbstractModel) obj;
    if (this.id != null && other.id != null)
      return this.id.equals(other.id);
    return Objects.equals(this._identifier, other._identifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(this._identifier);
  }
}
